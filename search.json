[{"path":[]},{"path":"https://fiery.data-imaginist.com/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://fiery.data-imaginist.com/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://fiery.data-imaginist.com/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://fiery.data-imaginist.com/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://fiery.data-imaginist.com/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://fiery.data-imaginist.com/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://fiery.data-imaginist.com/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://fiery.data-imaginist.com/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://fiery.data-imaginist.com/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://fiery.data-imaginist.com/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://fiery.data-imaginist.com/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://fiery.data-imaginist.com/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 fiery authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://fiery.data-imaginist.com/articles/events.html","id":"life-cycle-events","dir":"Articles","previous_headings":"","what":"Life cycle Events","title":"The event cycle in fiery","text":"Following list life cycle events. triggered manually, fired part normal lifetime fiery server: start: trigger app started running. handlers receive app server argument well argument passed ignite() method. return value discarded. resume: trigger start event app started using reignite() method. handlers receive app server argument well argument passed reignite() method. return value discarded. end: trigger app stopped. handlers receive app server argument. return value discarded. cycle-start: trigger beginning loop, request queue flushed. handlers receive app server argument. return value discarded. cycle-end: trigger end loop, request queue flushed delayed, timed, asynchronous calls executed. handlers receive app server argument. return value discarded. header: trigger every time header request received. return value last called handler used determine processing request done. return value TRUE request continue normal processing. return value FALSE response send back connection closed without retrieving payload. handlers receive app server argument, client id id argument request object request argument. -request: trigger prior handling request (, every time request received unless short-circuited header handlers). return values handlers passed request handlers can thus used inject data request handlers (e.g. session specific data). handlers receive app server argument, client id id argument request object request argument. request: trigger -request event. main request handling done. return value last handler send back client response. handler registered 404 error returned automatically. return value valid response, 500 server error returned instead. handlers receive app server argument, client id id argument, request object request argument, list values created -event handlers arg_list argument. -request: trigger request event. can used inspect response (modify ) send client. handlers receive app server argument, client id id argument, request object request argument, response response argument. return value discarded. -message: event triggered websocket message received. -request event return values handlers passed message handlers. Specifically 'binary' 'message' value returned override original values message -message handler arguments. can e.g. used decode message passing message handlers. -message handlers receive app server argument, client id id argument, flag indicating whether message binary binary argument, message message argument, request object used establish connection client request argument. message: event triggered -message event used primary websocket message handling. request event, handlers message event receives return values -message handlers can used e.g. inject session specific data. message handlers receive app server argument, client id id argument, flag indicating whether message binary binary argument, message message argument, request object used establish connection client request argument, values returned -message handlers arg_list argument. Contrary request event return values handlers ignored websocket communication bidirectional. -message: event triggered message event. provided equivalent -request event necessity final response inspect handler can thus just well attached message event. clear division server logic, message specific handlers attached message event, whereas general handlers , possible, attached -message event. -message handlers receive app server argument, client id id argument, flag indicating whether message binary binary argument, message message argument, request object used establish connection client request argument. send: event triggered websocket message send client. handlers receive app server argument, client id id argument send message message argument. return value discarded. websocket-opened: event triggered client tries establish WebSocket connection server. handler receive app server argument, client id id argument, WebSocket class provided httpuv connection argument. return value discarded. Since event exposes logic httpuv package connection argument liable changes httpuv API. websocket-closed: event triggered every time websocket connection closed. handlers receive app server argument, client id id argument request used establish closed connection request argument. return value discarded.","code":""},{"path":"https://fiery.data-imaginist.com/articles/events.html","id":"custom-events","dir":"Articles","previous_headings":"","what":"Custom Events","title":"The event cycle in fiery","text":"Apart predefined events, also possible trigger listen custom events. syntax follows: Additional parameters passed trigger() method passed handler. limit number handlers can attached custom events. event triggered simply called order added. Triggering non-existing event error, plugins free fire events without worrying whether handlers added.","code":"# Add a handler to the 'new-event' event id <- app$on('new-event', function() {   message('Event fired') })  # Trigger the event app$trigger('new-event')  # Remove the handler app$off(id)"},{"path":"https://fiery.data-imaginist.com/articles/events.html","id":"triggering-events-externally","dir":"Articles","previous_headings":"","what":"Triggering Events Externally:","title":"The event cycle in fiery","text":"fiery server running blocking mode possible communicate using trigger() method (though can fired callbacks server logic). Instead possible assign directory look event trigger instructions. trigger directory set using trigger_dir field, e.g.: Events triggered placing rds file named event trigger directory. file must contain list, elements list passed arguments event handlers. event triggered file deleted. following command trigger external-event server looking '//path//dir/':","code":"app$trigger_dir <- '/some/path/to/dir/' saveRDS(list(arg1 = 'test'), '/some/path/to/dir/external-event.rds')"},{"path":"https://fiery.data-imaginist.com/articles/plugins.html","id":"using-plugins","dir":"Articles","previous_headings":"","what":"Using Plugins","title":"Creating and using fiery plugins","text":"Plugins added Fire object using attach() method. parameters passed along plugin attach() method passed plugins on_attach() method (see ).","code":"app$attach(plugin)"},{"path":"https://fiery.data-imaginist.com/articles/plugins.html","id":"creating-plugins","dir":"Articles","previous_headings":"","what":"Creating Plugins","title":"Creating and using fiery plugins","text":"fiery plugin specification rather simple. plugin either list environment (e.g. RefClas R6 object) following elements: on_attach(server, ...): function get called plugin attached server. passed server object first argument along arguments passed attach() method. name: string giving name plugin. require: Optional character vector giving names plugins must attached plugin work. Apart , list/environment can contain anything desires. example relatively complex plugin, look source code routr package.","code":""},{"path":"https://fiery.data-imaginist.com/articles/plugins.html","id":"accessing-plugins","dir":"Articles","previous_headings":"","what":"Accessing Plugins","title":"Creating and using fiery plugins","text":"plugin attached Fire object, two things happens. First, on_attach() function plugin called modifying server different ways, plugin object saved internally, can later retrieved. plugins accessible plugins field name plugin. useful plugins modifies plugins, dependent functionality plugins. minimal example plugin using another plugin (add route prints “Hello” console everytime ressource requested): Hello_plugin depends routr plugin functionality modifies request router always say hello processing requests. reques_routr plugin already attached possible use Hello_plugin plugin. also possible soft dependency another plugin, listing require instead use has_plugin() method server modify behaviour plugin. rewrite Hello_plugin add routr plugin missing:","code":"plugin <- list(   on_attach = function(server) {     router <- server$plugins$request_routr     route <- Route$new()     route$add_handler('all', '*', function(request, response, arg_list, ...) {       message('Hello')       TRUE     })     router$add_route(route, 1)   },   name = 'Hello_plugin',   require = 'request_routr' ) plugin <- list(   on_attach = function(server) {     if (!server$has_plugin('request_routr')) {       server$attach(RouteStack$new())     }     router <- server$plugins$request_routr     route <- Route$new()     route$add_handler('all', '*', function(request, response, arg_list, ...) {       message('Hello')       TRUE     })     router$add_route(route, 1)   },   name = 'Hello_plugin2' )"},{"path":"https://fiery.data-imaginist.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thomas Lin Pedersen. Maintainer, author.","code":""},{"path":"https://fiery.data-imaginist.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pedersen T (2025). fiery: Lightweight Flexible Web Framework. R package version 1.2.1.9000, https://fiery.data-imaginist.com.","code":"@Manual{,   title = {fiery: A Lightweight and Flexible Web Framework},   author = {Thomas Lin Pedersen},   year = {2025},   note = {R package version 1.2.1.9000},   url = {https://fiery.data-imaginist.com}, }"},{"path":"https://fiery.data-imaginist.com/index.html","id":"how-to-install-this","dir":"","previous_headings":"","what":"How to install this","title":"A Lightweight and Flexible Web Framework","text":"Install release CRAN using install.packages('fiery') get development version directly GitHub using pak:","code":"# install.packages('pak') pak::pak('thomasp85/fiery')"},{"path":"https://fiery.data-imaginist.com/index.html","id":"design","dir":"","previous_headings":"","what":"Design","title":"A Lightweight and Flexible Web Framework","text":"Fiery designed around clear server life-cycle events triggered specific points life-cycle call handlers attached events. addition life-cycle events, possible trigger custom events attach handlers well. Fiery designed modularity mind plugins can developed different tasks mixed matched suit specific project. intro might indicate fiery difficult use, case. Much hard work handling http requests encapsulated reqres fiery uses handle http requests responses. , plugin often used routr, provides powerful routing HTTP requests, thus simplifying server logic even .","code":""},{"path":"https://fiery.data-imaginist.com/index.html","id":"a-minimal-example","dir":"","previous_headings":"","what":"A minimal example","title":"A Lightweight and Flexible Web Framework","text":"Following Hello World-ish example fiery app (sans routr), showcases different life-cycle events: general much logic happen request message handlers free ignore life-cycle events needed.","code":"library(fiery)  # Create a New App app <- Fire$new()  # Setup the data every time it starts app$on('start', function(server, ...) {     server$set_data('visits', 0)     server$set_data('cycles', 0) })  # Count the number of cycles (internal loops) app$on('cycle-start', function(server, ...) {     server$set_data('cycles', server$get_data('cycles') + 1) })  # Count the number of requests app$on('before-request', function(server, ...) {     server$set_data('visits', server$get_data('visits') + 1) })  # Handle requests app$on('request', function(server, request, ...) {     response <- request$respond()     response$status <- 200L     response$body <- paste0('<h1>This is indeed a test. You are number ', server$get_data('visits'), '<\/h1>')     response$type <- 'html' })  # Show number of requests in the console app$on('after-request', function(server, ...) {     message(server$get_data('visits'))     flush.console() })  # Terminate the server after 50 cycles app$on('cycle-end', function(server, ...) {     if (server$get_data('cycles') > 50) {         message('Ending...')         flush.console()         server$extinguish()     } })  # Be polite app$on('end', function(server) {     message('Goodbye')     flush.console() })  app$ignite(showcase = TRUE) #> Fire started at <127.0.0.1:8080> #> message: Goodbye from message(\"Goodbye\")"},{"path":"https://fiery.data-imaginist.com/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"A Lightweight and Flexible Web Framework","text":"Please note ‘fiery’ project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a New App Object — Fire","title":"Generate a New App Object — Fire","text":"Fire generator creates new Fire-object, class containing app logic. class based R6 OO-system thus reference-based methods data attached object, contrast well known S3 S4 systems. fiery server event driven, means build manipulated adding event handlers triggering events. learn fiery event model, read event vignette. fiery servers can modified directly attaching plugins. events, plugins vignette.","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"initialization","dir":"Reference","previous_headings":"","what":"Initialization","title":"Generate a New App Object — Fire","text":"new 'Fire'-object initialized using new() method generator:","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"copying","dir":"Reference","previous_headings":"","what":"Copying","title":"Generate a New App Object — Fire","text":"Fire objects using reference semantics new copies app made simply assigning new variable. true copy Fire object desired, use clone() method.","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Generate a New App Object — Fire","text":"host string giving valid IPv4 address owned server, '0.0.0.0' listen addresses. default '127.0.0.1' port integer giving port number server listen (defaults 8080L) refresh_rate interval seconds run cycles running blocking server (defaults 0.001) refresh_rate_nb interval seconds run cycles running non-blocking server (defaults 1) trigger_dir valid folder trigger files can put running blocking server (defaults NULL). See event cycle fiery vignette information. plugins named list already attached plugins. Read - can modified using attach() method. data_store Access environment holds global data store root location app. Setting remove root value requests (decline 400 request match root). E.g. path request changed /demo/test /test root == '/demo' access_log_format glue string defining requests logged. standard formats see common_log_format combined_log_format. Defaults Common Log Format key encryption key use request/response encryption session_cookie_settings Get set session cookie settings trust logical indicating whether incoming requests trusted. compression_limit size threshold bytes trying compress response body (still dependant content negotiation)","code":""},{"path":[]},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Generate a New App Object — Fire","text":"Fire$new() Fire$format() Fire$ignite() Fire$start() Fire$reignite() Fire$resume() Fire$extinguish() Fire$stop() Fire$() Fire$() Fire$trigger() Fire$send() Fire$close_ws_con() Fire$serve_static() Fire$exclude_static() Fire$attach() Fire$has_plugin() Fire$header() Fire$set_data() Fire$get_data() Fire$remove_data() Fire$time() Fire$remove_time() Fire$delay() Fire$remove_delay() Fire$async() Fire$remove_async() Fire$set_client_id_converter() Fire$set_logger() Fire$log() Fire$is_running() Fire$safe_call() Fire$test_request() Fire$test_header() Fire$test_message() Fire$test_websocket() Fire$clone()","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Generate a New App Object — Fire","text":"Create new Fire app","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$new(host = \"127.0.0.1\", port = 8080)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"host string overriding default host port port number overriding default port","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Generate a New App Object — Fire","text":"Fire object","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Generate a New App Object — Fire","text":"Human readable description app","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$format(...)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"... ignored","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Generate a New App Object — Fire","text":"character vector","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-ignite-","dir":"Reference","previous_headings":"","what":"Method ignite()","title":"Generate a New App Object — Fire","text":"Begin running server. trigger start event","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$ignite(block = TRUE, showcase = FALSE, ..., silent = FALSE)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"block console blocked running (alternative run background) showcase default browser open server address. TRUE browser opens root app. string string used path add root opening ... Arguments passed start handler silent startup messaging silenced","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-start-","dir":"Reference","previous_headings":"","what":"Method start()","title":"Generate a New App Object — Fire","text":"Synonymous method ignite()","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$start(...)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"... passed ignite()","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-reignite-","dir":"Reference","previous_headings":"","what":"Method reignite()","title":"Generate a New App Object — Fire","text":"Resume session. equivalent ignite() also trigger resume event","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$reignite(...)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"... passed ignite()","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-resume-","dir":"Reference","previous_headings":"","what":"Method resume()","title":"Generate a New App Object — Fire","text":"Synonymous method reignite()","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$resume(...)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"... passed ignite()","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-extinguish-","dir":"Reference","previous_headings":"","what":"Method extinguish()","title":"Generate a New App Object — Fire","text":"Stop server. trigger end event","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$extinguish()"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-stop-","dir":"Reference","previous_headings":"","what":"Method stop()","title":"Generate a New App Object — Fire","text":"Synonymous method extinguish()","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$stop()"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-on-","dir":"Reference","previous_headings":"","what":"Method on()","title":"Generate a New App Object — Fire","text":"Add handler event. See event cycle fiery vignette information.","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$on(event, handler, pos = NULL, id = NULL)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"event name event trigger handler handler handler function triggered pos position handler stack place . NULL place end. id optional id use identify handler","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Generate a New App Object — Fire","text":"unique string identifying handler (either id generated )","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-off-","dir":"Reference","previous_headings":"","what":"Method off()","title":"Generate a New App Object — Fire","text":"Remove event handler app.","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$off(handlerId)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"handlerId unique id identifying handler","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-trigger-","dir":"Reference","previous_headings":"","what":"Method trigger()","title":"Generate a New App Object — Fire","text":"Trigger event app. cause handler attached event called. See event cycle fiery vignette information.","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$trigger(event, ...)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"event name event ... Arguments passed handlers","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Generate a New App Object — Fire","text":"named list containing return values handlers attached event","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-send-","dir":"Reference","previous_headings":"","what":"Method send()","title":"Generate a New App Object — Fire","text":"Send Websocket message client. trigger send event.","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$send(message, id)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"message message send id id client send . missing, message send clients","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-close-ws-con-","dir":"Reference","previous_headings":"","what":"Method close_ws_con()","title":"Generate a New App Object — Fire","text":"Close Websocket connection. trigger websocket-closed event","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$close_ws_con(id)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"id id client close websocket connection ","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-serve-static-","dir":"Reference","previous_headings":"","what":"Method serve_static()","title":"Generate a New App Object — Fire","text":"Serve file directory files specified url path. Requests matching file system never enters request loop served directly (fast). Due , logging requests also turned ","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$serve_static(   at,   path,   use_index = TRUE,   fallthrough = FALSE,   html_charset = \"utf-8\",   headers = list(),   validation = NULL )"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"url path listen requests path path file directory file system use_index index.html file served present client requests folder fallthrough requests match file enter request loop 404 response send directly html_charset charset report serving html files headers list headers add response. combined global headers app validation optional validation pattern. Presently, type validation supported exact string match header. example, validation \"abc\" = \"xyz\", HTTP requests must header named abc (case-insensitive) value \"xyz\" (case-sensitive). request matching header, httpuv give 403 Forbidden response. character(0) (default), validation check performed.","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-exclude-static-","dir":"Reference","previous_headings":"","what":"Method exclude_static()","title":"Generate a New App Object — Fire","text":"Exclude url path serving static content. meaningful exclude sub paths path set serve static content","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$exclude_static(at)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"url path exclude static serving. Request path enter normal request loop","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-attach-","dir":"Reference","previous_headings":"","what":"Method attach()","title":"Generate a New App Object — Fire","text":"Attach plugin app. See Creating using fiery plugins vignette information","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$attach(plugin, ..., name = NULL, force = FALSE)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"plugin plugin attach ... Arguments pass plugins on_attach() method name Optional name plugin. omitted plugin$name used instead force plugin already attached error thrown, unless force = TRUE tells app reattach ","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-has-plugin-","dir":"Reference","previous_headings":"","what":"Method has_plugin()","title":"Generate a New App Object — Fire","text":"Check app plugin attached","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$has_plugin(name)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"name name plugin","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Generate a New App Object — Fire","text":"boolean indicating given plugin already attached","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-header-","dir":"Reference","previous_headings":"","what":"Method header()","title":"Generate a New App Object — Fire","text":"Add global http header applied responses","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$header(name, value)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"name name header value value header. Use NULL remove global header","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-set-data-","dir":"Reference","previous_headings":"","what":"Method set_data()","title":"Generate a New App Object — Fire","text":"Add data global data store","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$set_data(name, value)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"name name identifying data value data add","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-get-data-","dir":"Reference","previous_headings":"","what":"Method get_data()","title":"Generate a New App Object — Fire","text":"Retrieve data global data store","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$get_data(name)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"name name identifying data","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Generate a New App Object — Fire","text":"data requested. Returns NULL store contain requested data","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-remove-data-","dir":"Reference","previous_headings":"","what":"Method remove_data()","title":"Generate a New App Object — Fire","text":"Remove data global data store","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$remove_data(name)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"name name identifying data removed","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-time-","dir":"Reference","previous_headings":"","what":"Method time()","title":"Generate a New App Object — Fire","text":"Add timed evaluation evaluated given number seconds.","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$time(expr, then, after, loop = FALSE)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"expr expression evaluate time passed handler call expr evaluated time second wait evaluating expr loop expr called repeatedly interval given ","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Generate a New App Object — Fire","text":"unique id identifying handler","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-remove-time-","dir":"Reference","previous_headings":"","what":"Method remove_time()","title":"Generate a New App Object — Fire","text":"Remove timed evaluation","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$remove_time(id)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"id unique id identifying handler","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-delay-","dir":"Reference","previous_headings":"","what":"Method delay()","title":"Generate a New App Object — Fire","text":"Add delayed evaluation evaluated immediately end loop cycle.","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$delay(expr, then)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"expr expression evaluate end cycle handler call expr evaluated","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Generate a New App Object — Fire","text":"unique id identifying handler","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-remove-delay-","dir":"Reference","previous_headings":"","what":"Method remove_delay()","title":"Generate a New App Object — Fire","text":"Remove delayed evaluation","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$remove_delay(id)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"id unique id identifying handler","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-async-","dir":"Reference","previous_headings":"","what":"Method async()","title":"Generate a New App Object — Fire","text":"Add asynchronous evaluation evaluated another process without blocking server. function deprecated favor using async framework choice, e.g. mirai promises","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$async(expr, then)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-23","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"expr expression evaluate end cycle handler call expr evaluated","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Generate a New App Object — Fire","text":"unique id identifying handler","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-remove-async-","dir":"Reference","previous_headings":"","what":"Method remove_async()","title":"Generate a New App Object — Fire","text":"Remove async evaluation","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$remove_async(id)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-24","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"id unique id identifying handler","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-set-client-id-converter-","dir":"Reference","previous_headings":"","what":"Method set_client_id_converter()","title":"Generate a New App Object — Fire","text":"Sets function converts HTTP request specific client id","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$set_client_id_converter(converter)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-25","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"converter function argument request","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-set-logger-","dir":"Reference","previous_headings":"","what":"Method set_logger()","title":"Generate a New App Object — Fire","text":"Sets logging function use","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$set_logger(logger)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-26","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"logger function arguments event, message, request, ...","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-log-","dir":"Reference","previous_headings":"","what":"Method log()","title":"Generate a New App Object — Fire","text":"Log message logger attached app. See loggers build functionality","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$log(   event,   message,   request = NULL,   ...,   .logcall = sys.call(),   .topcall = sys.call(-1),   .topenv = parent.frame() )"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-27","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"event event associated message message message log request Request object associated message, . ... Additional arguments passed logger. .logcall call send log request .topcall call .logcall called .topenv environment associated .topcall","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-is-running-","dir":"Reference","previous_headings":"","what":"Method is_running()","title":"Generate a New App Object — Fire","text":"Test app running","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$is_running()"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-safe-call-","dir":"Reference","previous_headings":"","what":"Method safe_call()","title":"Generate a New App Object — Fire","text":"Evaluate expression safely, logging errors, warnings, messages bubbles ","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-31","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$safe_call(expr, request = NULL)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-28","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"expr expression evaluate request request evaluation, . Used logging","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Generate a New App Object — Fire","text":"value expression. error caught, condition object returned instead","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-test-request-","dir":"Reference","previous_headings":"","what":"Method test_request()","title":"Generate a New App Object — Fire","text":"Send request directly request logic non-running app. intended testing request logic","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-32","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$test_request(request)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-29","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"request request send","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-test-header-","dir":"Reference","previous_headings":"","what":"Method test_header()","title":"Generate a New App Object — Fire","text":"Send request directly header logic non-running app. intended testing request logic","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-33","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$test_header(request)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-30","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"request request send","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-test-message-","dir":"Reference","previous_headings":"","what":"Method test_message()","title":"Generate a New App Object — Fire","text":"Send message directly message logic non-running app. intended testing websocket logic","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-34","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$test_message(request, binary, message, withClose = TRUE)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-31","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"request request use establish connection binary message send binary character format message message send. binary = FALSE character vector, binary = TRUE raw vector withClose websocket connection closed end client","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-test-websocket-","dir":"Reference","previous_headings":"","what":"Method test_websocket()","title":"Generate a New App Object — Fire","text":"Send message directly non-running app. intended testing websocket logic","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-35","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$test_websocket(request, message, close = TRUE)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-32","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"request request use establish connection message message send app close websocket connection closed end server","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Generate a New App Object — Fire","text":"objects class cloneable method.","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"usage-36","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a New App Object — Fire","text":"","code":"Fire$clone(deep = FALSE)"},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"arguments-33","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a New App Object — Fire","text":"deep Whether make deep clone.","code":""},{"path":"https://fiery.data-imaginist.com/reference/Fire.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a New App Object — Fire","text":"","code":"# Create a New App app <- Fire$new(port = 4689)  # Setup the data every time it starts app$on('start', function(server, ...) {     server$set_data('visits', 0)     server$set_data('cycles', 0) })  # Count the number of cycles app$on('cycle-start', function(server, ...) {     server$set_data('cycles', server$get_data('cycles') + 1) })  # Count the number of requests app$on('before-request', function(server, ...) {     server$set_data('visits', server$get_data('visits') + 1) })  # Handle requests app$on('request', function(server, ...) {     list(         status = 200L,         headers = list('Content-Type' = 'text/html'),         body = paste('This is indeed a test. You are number', server$get_data('visits'))     ) })  # Show number of requests in the console app$on('after-request', function(server, ...) {     message(server$get_data('visits'))     flush.console() })  # Terminate the server after 300 cycles app$on('cycle-end', function(server, ...) {     if (server$get_data('cycles') > 300) {         message('Ending...')         flush.console()         server$extinguish()     } })  # Be polite app$on('end', function(server) {     message('Goodbye')     flush.console() })  if (FALSE) { # \\dontrun{ app$ignite(showcase = TRUE) } # }"},{"path":"https://fiery.data-imaginist.com/reference/fake_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a fake request to use in testing — fake_request","title":"Create a fake request to use in testing — fake_request","text":"function creates new request specific resource defined URL. mimics format requests provided httpuv, meaning can used place requests send -request, request, -request handlers. provided handlers can tested without start server.","code":""},{"path":"https://fiery.data-imaginist.com/reference/fake_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a fake request to use in testing — fake_request","text":"","code":"fake_request(   url,   method = \"get\",   app_location = \"\",   content = \"\",   headers = list(),   ...,   remote_address = \"123.123.123.123\" )"},{"path":"https://fiery.data-imaginist.com/reference/fake_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a fake request to use in testing — fake_request","text":"url complete url resource request ask method request type (get, post, put, etc). Defaults \"get\" app_location string giving first part url path stripped path content content request, either raw vector string headers list name-value pairs defines request headers ... Additional name-value pairs added request remote_address IP address presumed sender","code":""},{"path":"https://fiery.data-imaginist.com/reference/fake_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a fake request to use in testing — fake_request","text":"Rook-compliant environment","code":""},{"path":"https://fiery.data-imaginist.com/reference/fake_request.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a fake request to use in testing — fake_request","text":"","code":"req <- fake_request(     'http://www.my-fake-website.com/path/to/a/query/?key=value&key2=value2',     content = 'Some important content' )  # Get the main address of the URL req[['SERVER_NAME']] #> [1] \"www.my-fake-website.com\"  # Get the query string req[['QUERY_STRING']] #> [1] \"key=value&key2=value2\"  # ... etc.  # Cleaning up connections rm(req) gc() #>           used (Mb) gc trigger  (Mb) max used  (Mb) #> Ncells 1188010 63.5    2243398 119.9  2243398 119.9 #> Vcells 2207429 16.9    8388608  64.0  8388604  64.0"},{"path":"https://fiery.data-imaginist.com/reference/fiery-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fiery: A Lightweight and Flexible Web Framework — fiery-package","title":"fiery: A Lightweight and Flexible Web Framework — fiery-package","text":"flexible framework building server side logic R. framework unopinionated comes HTTP requests WebSocket messages handled supports levels app complexity; serving static content full-blown dynamic web-apps. Fiery hold hand much e.g. shiny package , instead sets free create web app way want.","code":""},{"path":"https://fiery.data-imaginist.com/reference/fiery-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fiery: A Lightweight and Flexible Web Framework — fiery-package","text":"fiery lightweight flexible framework web servers build top httpuv package. framework largely event-based, letting developer attach handlers life-cycle events well defining triggering events. approach development common JavaScript, might feel foreign R developers. Thankfully rather simple concept easy gradually begin use greater greater effect.","code":""},{"path":[]},{"path":"https://fiery.data-imaginist.com/reference/fiery-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fiery: A Lightweight and Flexible Web Framework — fiery-package","text":"Maintainer: Thomas Lin Pedersen thomasp85@gmail.com (ORCID)","code":""},{"path":"https://fiery.data-imaginist.com/reference/loggers.html","id":null,"dir":"Reference","previous_headings":"","what":"App Logging — loggers","title":"App Logging — loggers","text":"fiery build logging mechanism lets capture event information however like. Every user-injested warnings errors automatically captured logger along system errors well. fiery tries hard break due faulty app logic. means event handler error converted error log without fiery stopping. case request handlers 500L response send back error encountered.","code":""},{"path":"https://fiery.data-imaginist.com/reference/loggers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"App Logging — loggers","text":"","code":"logger_null()  logger_console(format = \"{time} - {event}: {message}\")  logger_file(file, format = \"{time} - {event}: {message}\")  logger_switch(..., default = logger_null())  logger_logger(default_level = \"INFO\")  common_log_format  combined_log_format"},{"path":"https://fiery.data-imaginist.com/reference/loggers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"App Logging — loggers","text":"object class character length 1. object class character length 1.","code":""},{"path":"https://fiery.data-imaginist.com/reference/loggers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"App Logging — loggers","text":"format glue string specifying format log entry file file connection write ... named list loggers use different events. semantics switch used possible let events fall e.g. logger_switch(error =, warning = logger_file('errors.log')). default catch-logger use events defined ... default_level log level use events request, websocket, message, warning, error","code":""},{"path":"https://fiery.data-imaginist.com/reference/loggers.html","id":"setting-a-logger","dir":"Reference","previous_headings":"","what":"Setting a logger","title":"App Logging — loggers","text":"default, fiery uses logger_null() forwards warning error messages stderr() ignores logging events. change behavior, set different logger using set_logger() method:   logger function taking least following arguments: event, message, request, time, .... fiery comes additional loggers, either writes logs file console. new instance file logger can created logger_file(file):   new instance console logger can create logger_console():   functions takes format argument lets customise log written. Furthermore console logger style logs colour coding depending content console supports . last possibility possible use different loggers dependent event using switch logger:","code":"app$set_logger(logger) app$set_logger(logger_file('fiery_log.log')) app$set_logger(logger_console()) app$set_logger(logger_switch(warning =,                              error = logger_file('errors.log),                              default = logger_file('info.log')))"},{"path":"https://fiery.data-imaginist.com/reference/loggers.html","id":"automatic-logs","dir":"Reference","previous_headings":"","what":"Automatic logs","title":"App Logging — loggers","text":"fiery logs number different information describing operations run. following events send log: start send server starts resume send server resumed stop send server stops request send request handled. message contain information long time took handle request denied. websocket send every time WebSocket connection established closed well message received send message send every time message emitted event handler delayed execution handler warning send everytime warning emitted event handler delayed execution handler error send everytime error signaled event handler delayed execution handler. addition internal functions also emit error event exceptions encountered default message, warning error events logged sending error stream message().","code":""},{"path":"https://fiery.data-imaginist.com/reference/loggers.html","id":"access-logs","dir":"Reference","previous_headings":"","what":"Access Logs","title":"App Logging — loggers","text":"particular interest logs detail requests made server. request events detailed . different standards requests logged. fiery uses Common Log Format default, can modified setting access_log_format field glue expression access following variables: start_time time request recieved end_time time response send back request Request object response Response object id client id change format:","code":"app$access_log_format <- combined_log_format"},{"path":"https://fiery.data-imaginist.com/reference/loggers.html","id":"custom-logs","dir":"Reference","previous_headings":"","what":"Custom logs","title":"App Logging — loggers","text":"Apart standard logs described also possible send messages log please, e.g. inside event handlers. done log() method least specify event message. general better send messages log() rather warning() stop() even though latters eventually caught, gives control logging happen case exception. example using log() handler :   log timepoint headers request recieved.","code":"app$on('header', function(server, id, request) {   server$log('info', paste0('request from ', id, ' received'), request) })"},{"path":"https://fiery.data-imaginist.com/reference/random_port.html","id":null,"dir":"Reference","previous_headings":"","what":"Select a random safe port — random_port","title":"Select a random safe port — random_port","text":"small utility function get random safe ports run application . chooses port within range registeret IANA thus safe assume use.","code":""},{"path":"https://fiery.data-imaginist.com/reference/random_port.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select a random safe port — random_port","text":"","code":"random_port()"},{"path":"https://fiery.data-imaginist.com/reference/random_port.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select a random safe port — random_port","text":"integer range 49152-65535","code":""},{"path":"https://fiery.data-imaginist.com/reference/random_port.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select a random safe port — random_port","text":"","code":"random_port() #> [1] 60617"},{"path":"https://fiery.data-imaginist.com/reference/session_id_cookie.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a session cookie to store the id of the session — session_id_cookie","title":"Use a session cookie to store the id of the session — session_id_cookie","text":"function constructs ID extractor incoming requests, return value passed id argument request, header, message etc handlers. default, fiery uses default arguments.","code":""},{"path":"https://fiery.data-imaginist.com/reference/session_id_cookie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a session cookie to store the id of the session — session_id_cookie","text":"","code":"session_id_cookie(name = \"fiery_id\", secure = FALSE)"},{"path":"https://fiery.data-imaginist.com/reference/session_id_cookie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a session cookie to store the id of the session — session_id_cookie","text":"name name cookie store session id secure session id send HTTPS? Setting TRUE require setting proxy manager SSL support front fiery server.","code":""},{"path":"https://fiery.data-imaginist.com/reference/session_id_cookie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a session cookie to store the id of the session — session_id_cookie","text":"unary function taking Request object returning ID ","code":""},{"path":"https://fiery.data-imaginist.com/reference/session_id_cookie.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use a session cookie to store the id of the session — session_id_cookie","text":"session id looked cookie matching name arg. found value cookie returned. found id generated reqres::random_key() attached response cookie given name. cookie set HTTP Strict site policy. Depending secure also sets transferred HTTPS.","code":""},{"path":"https://fiery.data-imaginist.com/reference/session_id_cookie.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Use a session cookie to store the id of the session — session_id_cookie","text":"Session ID considered authentication. handling sensitive data consider secure way identifying users across requests.","code":""},{"path":"https://fiery.data-imaginist.com/news/index.html","id":"fiery-development-version","dir":"Changelog","previous_headings":"","what":"fiery (development version)","title":"fiery (development version)","text":"Added serve_static() method Fire serve directory static files directly outside request loop Move code rlang style programming Full rewrite condition handling. Added logger_logger() use logger package logging Fire$log() now supports cli syntax message Support reqres_problem conditions Fire$log() now supports passing condition message Added Fire$data_store field suppleant Fire$get_data() friends. provides direct acces global data store Allow naming plugins attached showcase Fire$ignite()/Fire$run() can now take string giving path open browser . Improve default session id handling added session_id_cookie() helper function constructing session ID extractor Deprecate use future. Fire$delay() Fire$time() now uses quosures Fire$async() soft deprecated favor letting user use whatever async framework like Support returning promises request events, automated error logging promises events Added websocket-opened event allows user add handler modifies WebSocket connection established","code":""},{"path":"https://fiery.data-imaginist.com/news/index.html","id":"fiery-121","dir":"Changelog","previous_headings":"","what":"fiery 1.2.1","title":"fiery 1.2.1","text":"CRAN release: 2024-02-05 Fixed test failure affecting CRAN M1 machine","code":""},{"path":"https://fiery.data-imaginist.com/news/index.html","id":"fiery-120","dir":"Changelog","previous_headings":"","what":"fiery 1.2.0","title":"fiery 1.2.0","text":"CRAN release: 2023-03-17 Update work new future release Move assertthat rlang based type checking","code":""},{"path":"https://fiery.data-imaginist.com/news/index.html","id":"fiery-114","dir":"Changelog","previous_headings":"","what":"fiery 1.1.4","title":"fiery 1.1.4","text":"CRAN release: 2022-08-16 General upkeep (new CI, redocument, etc)","code":""},{"path":"https://fiery.data-imaginist.com/news/index.html","id":"fiery-113","dir":"Changelog","previous_headings":"","what":"fiery 1.1.3","title":"fiery 1.1.3","text":"CRAN release: 2020-12-15 Avoid tests fails CRAN machines due new testthat version","code":""},{"path":"https://fiery.data-imaginist.com/news/index.html","id":"fiery-112","dir":"Changelog","previous_headings":"","what":"fiery 1.1.2","title":"fiery 1.1.2","text":"CRAN release: 2019-09-27 Fix bug delayed logging result wrong message logged (#39) Remove tests new later architecture makes certain async operations untestable (#40) pkgdown site now available https://fiery.data-imaginist.com","code":""},{"path":"https://fiery.data-imaginist.com/news/index.html","id":"fiery-111","dir":"Changelog","previous_headings":"","what":"fiery 1.1.1","title":"fiery 1.1.1","text":"CRAN release: 2018-10-22 Fix bug root mounting app root stripped checking exists. Fix bug evaluating multiple futures , removal futures throw error (#28) Fix bug preventing setting loggers cloned apps (#30) call raises caught error now recorded log (#33)","code":""},{"path":"https://fiery.data-imaginist.com/news/index.html","id":"fiery-110","dir":"Changelog","previous_headings":"","what":"fiery 1.1.0","title":"fiery 1.1.0","text":"CRAN release: 2017-10-26 Add logging API. Set custom loggers set_logger() send messages log log(). Logging automatically delayed doesn’t slow request message handling (#18). Added access_log_format field define requests logged. Added is_running() method query state server. Capture errors handler events delayed execution, evaluation handlers unaffected (#20). Document use delayed evaluation. See ?delay_doc","code":""},{"path":"https://fiery.data-imaginist.com/news/index.html","id":"fiery-100","dir":"Changelog","previous_headings":"","what":"fiery 1.0.0","title":"fiery 1.0.0","text":"CRAN release: 2017-08-16 Fire$new() now takes port host argument set fields initialisation. (fixes #5) BREAKING Results -request -message events now passed request message handlers list arg_list argument rather single arguments. host port now advertised server started/resumed (#11) Fire objects now print method (#12) BREAKING fiery now uses reqres Request Response classes handling http exchange. BREAKING attach() now expect on_attach() method rather onAttach() method plugin. also expects name field optionally require field BREAKING header event now expect handlers return logical, TRUE indicating processing, FALSE indicating termination. Cycle events now triggered running block = FALSE making two run modes identical life cycle events. BREAKING -request event longer pass response handlers. can retrieved request object. server can now mounted path, strip path request paths thus making app logic independent mounting. Use root field access change root location. Websocket connections can now closed server using close_ws_con() method. Better documentation. Events plugins now documentation entries (fixes #10). Convert roxygen documentation md format BREAKING fields now uses snake_case rather camelCase consistent interface. means refreshRate -> refresh_rate, triggerDir -> trigger_dir. Switch MIT License Catch errors start resume event handlers","code":""},{"path":"https://fiery.data-imaginist.com/news/index.html","id":"fiery-023","dir":"Changelog","previous_headings":"","what":"fiery 0.2.3","title":"fiery 0.2.3","text":"CRAN release: 2017-06-26 DelayStack uses sequential futures lazy = TRUE previously used lazy futures deprecated","code":""},{"path":"https://fiery.data-imaginist.com/news/index.html","id":"fiery-022","dir":"Changelog","previous_headings":"","what":"fiery 0.2.2","title":"fiery 0.2.2","text":"CRAN release: 2017-01-07 Changed default host 127.0.0.1 Fixed test errors Windows builders","code":""},{"path":"https://fiery.data-imaginist.com/news/index.html","id":"fiery-020","dir":"Changelog","previous_headings":"","what":"fiery 0.2.0","title":"fiery 0.2.0","text":"Added fake_request generate fake, rook-compliant, request objects. Useful testing Added header method Fire setting global header policies Added standard 4xx responses Added FutureStack class subclasses capture expressions later, timed, async evaluation Added delay, remove_delay, time, remove_time, async, remove_async methods Fire adding delayed, timed, async expressions evaluation","code":""},{"path":"https://fiery.data-imaginist.com/news/index.html","id":"fiery-010","dir":"Changelog","previous_headings":"","what":"fiery 0.1.0","title":"fiery 0.1.0","text":"Added Fire class encapsulating server runtime Added HandlerStack class store trigger event handlers","code":""}]
